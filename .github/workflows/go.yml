name: Go

on:
  push:
    branches: ["main"]

jobs:

  build:
    runs-on: ubuntu-latest
    container: golang:1.25
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: go build

  tests:
    # Задание "tests" зависит от задания "build" и будет выполнено после него
    needs: build
    runs-on: ubuntu-latest
    container: golang:1.25
    steps:
      - uses: actions/checkout@v4

      - name: Test
        run: go test ./...

  # Задание проверяет наличие в коде состояния гонки
  tests-race:
    # Задание "tests-race" зависит от задания "build" и будет выполнено после него
    needs: build
    runs-on: ubuntu-latest
    container: golang:1.25
    steps:
      - uses: actions/checkout@v4

      - name: Test
        run: go test -race ./...
  
  # Задание проверяет код на соответствие стилю и отсутствие логических ошибок
  lint:
    # Задание "lint" зависит от заданий "tests" и "tests-race" и будет выполнено после них
    needs: [tests, tests-race]
    runs-on: ubuntu-latest
    container: golang:1.25
    steps:
      - uses: actions/checkout@v4

      # Используется действие "golangci/golangci-lint-action@v3", которое запускает линтер. Он проверит код на соответствие стилю и отсутствие логических ошибок
      - uses: golangci/golangci-lint-action@v4